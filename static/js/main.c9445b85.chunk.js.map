{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAceA,EAZF,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCMLK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMY,SAAUL,EAAOI,GAAGC,SAAUX,MAAOM,EAAOI,GAAGV,OAA1FU,MAEvB,OACE,mCACKH,KCMIK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACE,qBAAKX,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,mBACZC,SAAWH,OCCJI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOvB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG1B,WACI,OAAIC,KAAKF,MAAMC,SACJ,yDAEJC,KAAKT,MAAMK,a,GAhBCM,aCkDZC,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAiBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAjB1C,EAAKV,MAAQ,CACXnB,OAAQ,GACR2B,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAChBG,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACJ,EAAKZ,SAAS,CAACtB,OAAQkC,S,oBAQ7B,WAAW,IAAD,OACFC,EAAiBd,KAAKF,MAAMnB,OAAOoC,QAAO,SAAAC,GAC5C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKpB,MAAMQ,YAAYW,kBAEpE,OAAgC,IAA7BjB,KAAKF,MAAMnB,OAAOwC,OACV,yCAGH,sBAAK5C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWW,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQmC,e,GApCtBZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c9445b85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ( { name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return  <Card key={i} id={robots[i].id} name={robots[i].name} username={robots[i].username} email={robots[i].email} />\r\n    })\r\n    return (\r\n      <>\r\n          {cardComponent}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ( {searchChange} ) => {\r\n    return (\r\n      <div className='pa2'>\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue' \r\n        type='search' \r\n        placeholder='Enter RoboFriend' \r\n        onChange= {searchChange}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={ {overflowY: 'scroll', border: '1px solid black', height: '800px'} }>\r\n            {props.children}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\ncomponentDidCatch() {\r\n    this.setState({ hasError: true})\r\n}\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>ooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundry from '../components/ErrorBoundry.js';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''    \r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n          return response.json();\r\n      })\r\n      .then(users => {\r\n        this.setState({robots: users})\r\n      })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render () {\r\n    const filteredRobots = this.state.robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n    if(this.state.robots.length === 0) {\r\n        return <h1>Loading</h1>\r\n    }else{\r\n        return (\r\n            <div className='tc'>\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} /> \r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                      <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll> \r\n            </div>\r\n        ); \r\n    } \r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}